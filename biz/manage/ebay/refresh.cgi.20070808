#!/usr/bin/perl

use lib "/httpd/modules";
use DBINFO;
use ZOOVY;
use GTOOLS;
use EBAY::API;


my ($USERNAME,$FLAGS,$MID,$LUSER,$RESELLER) = ZOOVY::authenticate("http://app3.zoovy.com/ebayapi",2,"_M&4");
if (not defined $FLAGS) { $FLAGS = ''; }
if ($USERNAME eq '') { exit; }

my $ACTION = $ZOOVY::cgiv->{'ACTION'};
my $PROFILE = $ZOOVY::cgiv->{'PROFILE'};
$GTOOLS::TAG{'<!-- PROFILE -->'} = $PROFILE;

if ($ACTION eq 'PRODUCT') {
	$GTOOLS::TAG{'<!-- PRODUCT -->'} = $ZOOVY::cgiv->{'PRODUCT'};
	&GTOOLS::output(file=>'refresh-product.shtml',header=>3,tabs=>\@TABS,bc=>\@BC,js=>2+4+8);
	}

if ($ACTION eq '') {
	my @TABS = ();
	open F, "<tabs.txt";
	while ( my $line = <F> ) {
		next if ($line eq '');
		my %hash = ( 'target'=>'_top' );
		($hash{'name'},$hash{'link'}) = split(/\|/,$line);
		push @TABS, \%hash;
		}
	close(F);

	my @BC = ();
	push @BC, { name=>'Syndication', link=>'http://www.zoovy.com/biz/syndication', target=>'_top' };
	push @BC, { name=>'eBay Manager', link=>'/biz/manage/ebay', target=>'_top' };

	&GTOOLS::output(file=>'refresh-profile.shtml',header=>3,tabs=>\@TABS,bc=>\@BC,js=>2+4+8);
	}

##
## 
##
if ($ACTION eq 'AJAX-LOADDATASETS') {
	print "Content-type: text/plain\n\n";

	my $edbh = &EBAY::API::db_ebay_connect();
   my $qtVARS = $edbh->quote($ZOOVY::cgiv->{'VARS'});

	use Data::Dumper; print STDERR Dumper($ZOOVY::cgiv);
	
	
	my $pstmt = '';
	print STDERR "METHOD: $ZOOVY::cgi->{'METHOD'}\n";
   my @listings = ();
	my %FOUND = ();
	if ($ZOOVY::cgiv->{'METHOD'} eq 'PROFILE') {
	   # $pstmt = "select ID,EBAY_ID,TITLE,ENDS_GMT from MONITOR_QUEUE_OO where MID=$MID /* $USERNAME */ and ENDS_GMT>".time()." order by ID";
		## doesn't get GTC listings.
  		# $pstmt = "select ID,EBAY_ID,TITLE,ENDS_GMT from MONITOR_QUEUE_OO where MID=$MID /* $USERNAME */ and PROFILE=$qtVARS and ENDS_GMT>".time()." order by ID";
  	 	$pstmt = "select ID,EBAY_ID,TITLE,ENDS_GMT from MONITOR_QUEUE_OO where MID=$MID /* $USERNAME */ and PROFILE=$qtVARS and ((ENDS_GMT>".time().") or (ENDS_GMT=0 and IS_GTC>0)) order by ID";
		print STDERR $pstmt."\n";
		}
	elsif ($ZOOVY::cgiv->{'METHOD'} eq 'PRODUCT') {

		require INVENTORY;
		my ($items) = &INVENTORY::list_other('EBAYSTFEED',$USERNAME,$ZOOVY::cgiv->{'VARS'},0);
		foreach $item (@{$items}) {
			## returns: LISTINGID,PRODUCT,SKU,QTY,EXPIRES_GMT,CREATED, etc.
			if ($item->{'LISTINGID'} eq '') {
				## old syndication format (no listing id) probalby safe to remove
				&INVENTORY::set_other($USERNAME,'EBAYSTFEED',$item->{'SKU'},0,0,$item->{'LISTINGID'});
				}
			else {
				push @listings, { 
					Msg=>"Inventory reserved item: $item->{'LISTINGID'} qty: $item->{'QTY'}",
					EBAY_ID=>$item->{'LISTINGID'},
					ENDS_GMT=>$item->{'EXPIRES_GMT'},
					};
				$FOUND{$item->{'LISTINGID'}}++;
				}
			}

  	 	$pstmt = "select ID,EBAY_ID,TITLE,ENDS_GMT from MONITOR_QUEUE_OO where MID=$MID /* $USERNAME */ and PRODUCT=$qtVARS and ((ENDS_GMT>".time().") or (ENDS_GMT=0 and IS_GTC>0)) order by ID";
		}
	print STDERR $pstmt."\n";

   my $sth = $edbh->prepare($pstmt);
   $sth->execute();
   while ( my $listref = $sth->fetchrow_hashref() ) {
		next if (defined $FOUND{$listref->{'EBAY_ID'}});
		$listref->{'Msg'} = "$listref->{'EBAY_ID'} - $listref->{'TITLE'}<br>Ends: ".&ZTOOLKIT::pretty_date($listref->{'ENDS_GMT'},1);
		delete $listref->{'TITLE'};
		delete $listref->{'ENDS_GMT'};
		push @listings, $listref;
      }

	## okay, so this is a list
	foreach my $listing (@listings) {
		my $str = &ZTOOLKIT::buildparams($listing,1); 
		$str =~ s/\+/ /gs;
		print '?'.$str."\n";
		}
	&EBAY::API::db_ebay_close();
	}




if ($ACTION eq 'AJAX-EXECUTEDATASET') {
	print "Content-type: text/plain\n\n";

	my $EBAY_ID = 	$ZOOVY::cgiv->{'EBAY_ID'};
	my $resultref = {};
	if ((not defined $EBAY_ID) || ($EBAY_ID == 0)) {
		$resultref->{'ERROR'} = "No eBay item to revise.";
		}
	else {
		($resultref) = EBAY::API::fixup($USERNAME,undef,$EBAY_ID);
		}

	# my $resultref = {}; $resultref->{'Id'} = '1234';
	if ($resultref->{'ERRORCODE'}>0) {
		$resultref->{'ERROR'} = &ZOOVY::incode($resultref->{'ERROR'});
		print "$USERNAME/$EBAY_ID<br><font color='red'>Error[\#$resultref->{'ERRORCODE'}]: $resultref->{'ERROR'} $EBAY_ID</font>\n";
		}
	elsif ($resultref->{'Id'}) {
		print "<font color='blue'>Successfully revised item. <a target=\"ebay\" href=\"http://cgi.ebay.com/aw-cgi/eBayISAPI.dll?ViewItem&item=$resultref->{'Id'}\">View Item</a></font>";
		print STDERR "<font color='blue'>Successfully revised item. $EBAY_ID\n";
		}


	# use Data::Dumper; print "<br><font color='grey'>".Dumper($ZOOVY::cgiv,$resultref)."</font><br>"; 
	}




##
## performs minimal uri encoding
##
sub js_encode {
   my ($str) = @_;

   if (not Encode::is_utf8($str)) {
      $str = Encode::encode_utf8($str);
      }

   my $string = '';
   foreach my $ch (split(//,$str)) {
      my $oi = ord($ch);
      if ((($oi>=48) && ($oi<58)) || (($oi>64) &&  ($oi<=127))) { $string .= $ch; }
      ## don't encode <(60) or >(62) /(47)
      elsif (($oi==32) || ($oi==60) || ($oi==62) || ($oi==47)) { $string .= $ch; }
      else { $string .= '%'.sprintf("%02x",ord($ch));  }
      }
   return($string);
   }


sub js_serialize {
	my ($hashref) = @_;

	foreach my $k (keys %{$hashref}) {
		
		}
	
	}


exit;

