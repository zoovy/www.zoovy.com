#!/usr/bin/perl


##
## CONFIG values:
##		1 - FAVOR_EBAY - list remaining quantites to ebay
##		2 - AUTOPILOT - allow the system to guess on certain settings
##		4 - NOTIFY_NIGHT - send notification emails each night
##		8 - NOTIFY_ALL - send notification emails on all changes
##
##	 128 - LINK  - add a link to the ebay store on out of stock items
##	 256 - CONFIGURATOR - pogs in listings.
##

use lib "/httpd/modules"; 
use CGI;
use GTOOLS;
use ZOOVY;
use ZWEBSITE;	
use ZTOOLKIT;
use DBINFO;
use NAVCAT;
use strict;
use LWP::Simple;
use Storable;
use EBAY::API;
use EBAY::TOOLS;
use TOXML;

my @INVORDER = ('DISABLE','QTY1','SAFE','INSANE');
my %INV = (
	'DISABLE'=>'Disabled (Do not syndicate)',
	'QTY1'=>'Always Qty 1 at a Time [RECOMMENDED]',
	'SAFE'=>'Max Quantities when Configured and Available',
	'INSANE'=>'Always Launch Max Quantities',
	);

my $dbh = &DBINFO::db_zoovy_connect();	
my ($USERNAME,$FLAGS,$MID,$LUSER,$RESELLER) = ZOOVY::authenticate("/biz/syndication",2,'_P&16');
if ($USERNAME eq '') { exit; }

$USERNAME = lc($USERNAME);
my $q = new CGI;
my $qtUSERNAME = $dbh->quote($USERNAME);
$GTOOLS::TAG{'<!-- USERNAME -->'} = $USERNAME;
my $ACTION = $q->param('ACTION');

if ($FLAGS =~ /,L2,/) { $FLAGS .= ',EBAY,'; }

my $template_file = '';
if ($FLAGS !~ /,EBAY,/) {
	$template_file = 'deny.shtml'; $ACTION = 'DENY';
	}


## step 1- see if we already have a record setup, and if we do, what is it?
my $catupdate = 0;
my $pstmt = "select CATUPDATED from EBAYSTORE_FEEDS where USERNAME=$qtUSERNAME";
my $sth = $dbh->prepare($pstmt);
$sth->execute();
if ($sth->rows()) {
	($catupdate) = $sth->fetchrow();
	}
$sth->finish();

######
## SANITY: at this point EBAYSTORE_FEEDS is populated
##

if ($ACTION eq 'RESETASK') {
	$template_file = 'resetask.shtml';
	}

if ($ACTION eq 'RESETCONFIRM') {
	my $pstmt = "update EBAYSTORE_FEEDS set NEEDSRESET=1,SUSPENDED_GMT=0,UPDATED=0 where USERNAME=$qtUSERNAME";
	print STDERR $pstmt."\n";
	$dbh->do($pstmt);
	$ACTION = '';
	}

###########################################################################################
##
## Setup
##
###########################################################################################

if ($ACTION eq 'SAVE-SETUP') {
	my $pstmt = "select count(*) from EBAYSTORE_FEEDS where USERNAME=$qtUSERNAME";
	my $sth = $dbh->prepare($pstmt);
	$sth->execute();
	my ($count) = $sth->fetchrow();
	$sth->finish();

	if ($count==0) {
		my $MID = &ZOOVY::resolve_mid($USERNAME);
		$pstmt = "insert into EBAYSTORE_FEEDS (USERNAME,MID) values ($qtUSERNAME,$MID)";
		$dbh->do($pstmt);
		}

	my $CONFIG = 0;
	my $ENABLE_GALLERY = 0;
	if ($q->param('ENABLE_GALLERY')) { $ENABLE_GALLERY = 1; }
	if ($q->param('CONFIG_AUTOPILOT')) { $CONFIG += 2; }
	if ($q->param('CONFIG_NOTIFY_NIGHT')) { $CONFIG += 4; }
	if ($q->param('CONFIG_NOTIFY_ALL')) { $CONFIG += 8; }

	if ($q->param('CONFIG_LINK')) { $CONFIG += 128; }
	if ($q->param('CONFIG_CONFIGURATOR')) { $CONFIG += 256; }

	my $qtHTMLWIZ = $dbh->quote((defined $q->param('HTMLWIZ'))?$q->param('HTMLWIZ'):'');
	my $qtMAXLISTINGS = int((defined $q->param('MAXLISTINGS'))?int($q->param('MAXLISTINGS')):-1);

	my $ERROR = '';

	if ($ERROR ne '') {
		$GTOOLS::TAG{'<!-- ERROR -->'} = "<font color='red'>$ERROR</font>";
		}
	else {
		$pstmt = "update EBAYSTORE_FEEDS set SUSPENDED_GMT=0,STATUS='Waiting for update.',ENABLE_GALLERY=$ENABLE_GALLERY,HTMLWIZ='',MAXLISTINGS=$qtMAXLISTINGS,CONFIG=$CONFIG,INVENTORY=".$dbh->quote($q->param('INVENTORY')).",CREATED=now(),NEXTUPDATE=".time()." where USERNAME=$qtUSERNAME";
		$dbh->do($pstmt);
		}

	print STDERR $pstmt."\n";
	$dbh->do($pstmt);
	&ZWEBSITE::save_website_attrib($USERNAME,'ebaystores',time());
	$ACTION = '';
	}


if ($ACTION eq '') {
	$template_file = 'index.shtml';
	my $hashref = {};
	$pstmt = "select * from EBAYSTORE_FEEDS where USERNAME=$qtUSERNAME";
	$sth = $dbh->prepare($pstmt);
	print STDERR $pstmt."\n";
	$sth = $dbh->prepare($pstmt);
	$sth->execute();
	if ($sth->rows()>0) {
		($hashref) = $sth->fetchrow_hashref();
		}
	$sth->finish();
	$GTOOLS::TAG{'<!-- EBAYSTORE -->'} = $hashref->{'EBAYSTORE'};
	$GTOOLS::TAG{'<!-- CREATED -->'} = $hashref->{'CREATED'};
	$GTOOLS::TAG{'<!-- UPDATED -->'} = &ZTOOLKIT::pretty_date($hashref->{'UPDATED'},1);
	$GTOOLS::TAG{'<!-- CATUPDATED -->'} = &ZTOOLKIT::pretty_date($hashref->{'CATUPDATED'},1);

	$GTOOLS::TAG{'<!-- CONFIG_AUTOPILOT -->'} = (($hashref->{'CONFIG'} & 2)==2)?'checked':'';
	$GTOOLS::TAG{'<!-- CONFIG_NOTIFY_NIGHT -->'} = (($hashref->{'CONFIG'} & 4)==4)?'checked':'';
	$GTOOLS::TAG{'<!-- CONFIG_NOTIFY_ALL -->'} = (($hashref->{'CONFIG'} & 8)==8)?'checked':'';
	$GTOOLS::TAG{'<!-- ENABLE_GALLERY -->'} = ($hashref->{'ENABLE_GALLERY'})?'checked':'';

	$GTOOLS::TAG{'<!-- CONFIG_LINK -->'} = (($hashref->{'CONFIG'} & 128)==128)?'checked':'';
	$GTOOLS::TAG{'<!-- CONFIG_CONFIGURATOR -->'} = (($hashref->{'CONFIG'} & 256)==256)?'checked':'';


	$GTOOLS::TAG{'<!-- INVENTORY -->'} = '';
	foreach my $k (@INVORDER) {
		$GTOOLS::TAG{'<!-- INVENTORY -->'} .= "<option ".(($hashref->{'INVENTORY'} eq $k)?'selected':'')." value='$k'>$INV{$k}</option>\n";
		}

	if ($hashref->{'UPDATED'} eq '') { 
		$GTOOLS::TAG{'<!-- LAST_UPDATE -->'} = 'No settings.';
		$GTOOLS::TAG{'<!-- FILENAME -->'} = '';
		}
	elsif ($hashref->{'UPDATED'} == 0) {
		$GTOOLS::TAG{'<!-- LAST_UPDATE -->'} = 'Pending - next 24 hours';
		$GTOOLS::TAG{'<!-- FILENAME -->'} = '';
		}
	else {
		$GTOOLS::TAG{'<!-- LAST_UPDATE -->'} = &ZTOOLKIT::pretty_date($hashref->{'UPDATED'},1);
		$GTOOLS::TAG{'<!-- FILENAME -->'} = "http://static.zoovy.com/merchant/$USERNAME/ebaystores.txt";
		}
	$GTOOLS::TAG{'<!-- LAST_STATUS -->'} = $hashref->{'STATUS'};
	if ($hashref->{'NEEDSRESET'}) { $GTOOLS::TAG{'<!-- LAST_UPDATE -->'} = 'Pending eBay Store Reset!'; }

	if ($hashref->{'SUSPENDED_GMT'}>0) { $GTOOLS::TAG{'<!-- LAST_UPDATE -->'} = '<font color="red">PROCESSING IS CURRENTLY SUSPENDED!</font>'; }
	$GTOOLS::TAG{'<!-- MAXLISTINGS -->'} = int($hashref->{'MAXLISTINGS'});

	$GTOOLS::TAG{'<!-- HTML_WIZARDS -->'} = "<option value=\"\">Use Profile</option>\n";
	}

###########################################################################################
##
## Category
##
###########################################################################################


if ($ACTION eq 'SAVE-CATEGORY') {
	my $changed = 0;
	my $NC = NAVCAT->new($USERNAME);
	foreach my $safe ($NC->paths()) {
		next if (not defined $q->param('navcat-'.$safe));
		my ($pretty, $children, $productstr, $sortby, $metaref) = $NC->get($safe);
		next if (($metaref->{'EBAYSTORE_CAT'} eq $q->param('navcat-'.$safe)) && ($metaref->{'EBAY_CAT'} eq $q->param('ebay-'.$safe)));
		$metaref->{'EBAYSTORE_CAT'} = $q->param('navcat-'.$safe);
		$metaref->{'EBAY_CAT'} = $q->param('ebay-'.$safe);

		$NC->set($safe,metaref=>$metaref);
		}
	$NC->save(); undef $NC;

	if ($changed) {
		}

	$ACTION = 'CATEGORY';
	}


if ($ACTION eq 'CATEGORY') {
	$template_file = 'category.shtml';

	my ($toxml) = TOXML->new('DEFINITION','ebay.auction',USERNAME=>$USERNAME,MID=>$MID);
	my $catref = $toxml->getList('EBAYCAT');
	my %categories = ();
	$categories{''} = 'Not Set';
	## reverse the categories
	foreach my $opt (@{$catref}) {
		$categories{$opt->{'V'}} = $opt->{'T'};
		}

	## SETUP EBAY CATEGORIES
	# &EBAYINFO::grab_storecats($USERNAME);
	my @EBAYCATS = @{&EBAY::TOOLS::fetch_storecats($USERNAME)};
	

	##
	## SANITY:  at this point the @EBAYCATS array is populated!
	##
	my $c = '';
	use Data::Dumper;
	
	my $bgcolor = '';
	my $NC = NAVCAT->new($USERNAME);
	foreach my $safe (sort $NC->paths()) {
		next if (substr($safe,0,1) eq '*');
		next if ($safe eq '');

		my ($pretty, $children, $productstr, $sortby, $metaref) = $NC->get($safe);
		# print STDERR "META: $meta\n";
		# next if (substr($pretty,0,1) eq '!'); 		# why not let them use hidden categories

		if ($bgcolor eq 'FFFFFF') { $bgcolor='DEDEDE'; } else { $bgcolor = 'FFFFFF'; }

		my $name = ''; 
		if ($pretty eq '') { $pretty = "UN-NAMED: $safe"; }
		if (substr($safe,0,1) eq '.') {
			foreach (split(/\./,$safe)) { $name .= "&nbsp; - &nbsp; "; } $name .= $pretty;
			if ($safe eq '.') { $name = 'HOMEPAGE'; }
			}
		elsif (substr($safe,0,1) eq '$') {
			$name = "LIST: ".$pretty;
			}
		my $val = $metaref->{'EBAYSTORE_CAT'};
		$c .= "<tr bgcolor='$bgcolor'>";
		$c .= "<td nowrap>$name</td><td>";
		$c .= "<select name=\"navcat-$safe\">";
		$c .= "<option value=\"\">Do not submit category</option>";
		my $selected = '';
		my $found = 0;
		foreach my $cat (@EBAYCATS) {
			my ($catnum,$catname) = split(/,/,$cat,2);
			if ($val eq $catnum) { $found++; $selected = ' selected '; } else { $selected = ''; }
			$c .= "<option $selected value=\"$catnum\">$catname ($catnum)</a>";
			}
		if (($found == 0) && ($val ne '')) {
			$c .= "<option selected value=\"$val\">INVALID: $val</option>\n";
			}
		$c .= "</td>";

		$val = $metaref->{'EBAY_CAT'};
		$c .= "<td valign='top'><input name=\"ebay-$safe\" type=\"textbox\" size=\"6\" value=\"$val\"></td>";
		$c .= "<td valign='top'><a href=\"javascript:openWindow('/biz/syndication/ebaystore/catchooser.cgi?FQ=ebaystores.listing.EBAYCAT&V=ebay-$safe');\">[Choose]</a></td>";
		$c .= "<td valign='top'>".$categories{$val}."</td>";
		$c .= "</tr>\n";
		}
	if ($c eq '') { $c = '<tr><td><i>No website categories exist??</i></td></tr>'; }
	$GTOOLS::TAG{'<!-- CATEGORIES -->'} = $c;
	}


###########################################################################################
##
## Manage
##
###########################################################################################
if ($ACTION eq 'LOG') {
	$template_file = 'log.shtml';
	use lib "/httpd/ebayapi/modules";

	my $edbh = &EBAY::API::db_ebay_connect();
	my $pstmt = "select PRODUCT,EBAYID,MESSAGE from STORECREATE_LOG where MERCHANT=$qtUSERNAME order by ID desc limit 0,1000";
	my $sth = $edbh->prepare($pstmt);
	$sth->execute();
	my $c = '';
	while ( my ($prod,$ebayid,$message) = $sth->fetchrow() ) {
		$c = "<tr><td>$prod</td><td>$ebayid</td><td>$message</td></tr>\n".$c;
		}
	$GTOOLS::TAG{'<!-- LOG -->'} = "<tr><td><b>PRODUCT</b><td><b>EBAY ID</b></td><td><b>MESSAGE</b></td></tr>$c";
	$sth->finish();
	&EBAY::API::db_ebay_close();
	}

if ($ACTION eq 'REPORTS') {
	$template_file = 'reports.shtml';
	}


&GTOOLS::output(
   'title'=>'eBay Stores Syndication',
   'file'=>$template_file,
   'header'=>'1',
   'help'=>'#50380',
   'tabs'=>[
		{ name=>'Configuration',link=>'http://www.zoovy.com/biz/syndication/ebaystore','target'=>'_top', },
		{ name=>'Categories',link=>'http://www.zoovy.com/biz/syndication/ebaystore?ACTION=CATEGORY','target'=>'_top', },
		{ name=>'Log',link=>'http://app3.zoovy.com/biz/syndication/ebaystore?ACTION=LOG','target'=>'_top', },
		{ name=>'Reports',link=>'http://www.zoovy.com/biz/syndication/ebaystore?ACTION=REPORTS','target'=>'_top', },
      ],
   'bc'=>[
      { name=>'Syndication',link=>'http://www.zoovy.com/biz/syndication','target'=>'_top', },
      { name=>'eBay Store Feeds',link=>'http://www.zoovy.com/biz/syndication/ebaystore','target'=>'_top', },
      ],
   );

&DBINFO::db_zoovy_close();

