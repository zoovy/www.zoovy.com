#!/usr/bin/perl

use lib "/httpd/modules";
require ZOOVY;
require GTOOLS;
require GTOOLS::Form;
require DOBA;
require ZWEBSITE;
use Data::Dumper;

use strict;

my ($USERNAME,$FLAGS,$MID,$LUSER,$RESELLER) = ZOOVY::authenticate("/biz/setup",2,'_S&8');
if ($USERNAME eq '') { exit; }
$FLAGS = ",$FLAGS,";

my $ACTION = $ZOOVY::cgiv->{'ACTION'};
if (not defined $ACTION) { $ACTION = ''; }
print STDERR "ACTION IS: " . $ACTION . "\n";

my $DOBAUSERNAME = undef;
my $DOBAUSERID = undef;
$GTOOLS::TAG{"<!-- USERNAME -->"} = $USERNAME;

my @REGISTRATION_FIELDS = (
	{ type=>'checkbox', key=>'doba:agree_tc' },
	{ type=>'checkbox', key=>'doba:agree_privacy' },
	{ type=>'textbox', key=>'zoovy:first_name' },
	{ type=>'textbox', key=>'zoovy:last_name' },
	{ type=>'textbox', key=>'doba:username', maxlength=>35 },
	{ type=>'textbox', key=>'zoovy:phone', maxlength=>11 },
	{ type=>'textbox', key=>'zoovy:bill_address1', maxlength=>50 },
	{ type=>'textbox', key=>'zoovy:bill_address2', maxlength=>50 },
	{ type=>'textbox', key=>'zoovy:bill_city', maxlength=>20 },
	{ type=>'textbox', key=>'zoovy:bill_state', maxlength=>2, },
	{ type=>'textbox', key=>'zoovy:bill_zip', maxlength=>5 },
	{ type=>'select', key=>'zoovy:bill_country',  set=>['US'] },
	{ type=>'textbox', key=>'doba:bill_cc', maxlength=>16 },
	{ type=>'select', key=>'doba:bill_cc_expyr', set=>['2006','2007','2008','2009','2010','2011','2012' ] },
	{ type=>'select', key=>'doba:bill_cc_expmo', set=>['01','02','03','04','05','06','07','08','09','10','11','12'] },
	);

# Check if user is permitted to use DOMAINStools
my $template_file = 'index.shtml';

if (index($FLAGS, ',SC,') == -1) {
	$template_file = "deny.shtml"; 
	$GTOOLS::TAG{"<!-- ERROR_MSG -->"} = "You don't have permission to use these tools. [$FLAGS]";
	}


if ($ACTION eq 'SETUP-NEWUSER') {
	# $ACTION = 'ADDCUSTOMER';

	my $ref = &GTOOLS::Form::serialize(\@REGISTRATION_FIELDS,$ZOOVY::cgiv,{});
   my %params = ();
	$params{'username'} = $ref->{'doba:username'};
	$params{'email'} = $ref->{'doba:username'};
   $params{'first_name'} = $ref->{'zoovy:first_name'};
   $params{'last_name'} = $ref->{'zoovy:last_name'};
   $params{'phone'} = $ref->{'zoovy:phone'};
   $params{'bill_address1'} = $ref->{'zoovy:bill_address1'};
   $params{'bill_address2'} = $ref->{'zoovy:bill_address2'};
   $params{'bill_city'} = $ref->{'zoovy:bill_city'};
   $params{'bill_postal'} = $ref->{'zoovy:bill_zip'};
   $params{'bill_state'} = $ref->{'zoovy:bill_state'};
   $params{'bill_country'} = $ref->{'zoovy:bill_country'};
   $params{'cc_exp'} = substr($ref->{'doba:bill_cc_expyr'},0,4).'-'.$ref->{'doba:bill_cc_expmo'};
   $params{'cc_num'} = $ref->{'doba:bill_cc'};
   $params{'user_id'} = 'NEW';
   $params{'service'} = '"action=add,code=DS,frequency=M,renewal_billed_to=U,trial=30"';

   my $rref = undef;
	if (not $ref->{'doba:agree_tc'}) { $rref = { 'code'=>199, text=>"Did not agree to terms and conditions." }; }
	if (not $ref->{'doba:agree_privacy'}) { $rref = { 'code'=>199, text=>"Did not agree to privacy policy." }; }

	if (not defined $rref) { 
		$rref = &DOBA::doRequest('user.configure',\%params); 
		}
   print STDERR Dumper($rref);
	if ($rref->{'code'}>0) {
		## error
		$GTOOLS::TAG{'<!-- ERROR -->'} = $rref->{'text'};
		$ACTION = 'REAUTH';
		}
	else {
		$DOBAUSERNAME = $rref->{'username'};
		$DOBAUSERID = $rref->{'userid'};
		}

	&ZWEBSITE::save_website_attrib($USERNAME,'dobauser', $ref->{'doba:username'});
	open F, '>>'.&ZOOVY::resolve_userpath('doba').'/setup.log';
	use Data::Dumper; print F Dumper($ref,\%params,$rref);
	close F;

	}

if ($ACTION eq 'SETUP-EXISTING') {
	$DOBAUSERNAME = $ZOOVY::cgiv->{'dobauser'};
	my ($rref) = DOBA::doRequest('order.request_user_link',{ username=>$DOBAUSERNAME });
	&ZWEBSITE::save_website_attrib($USERNAME,'dobauser', $DOBAUSERNAME);

	open F, '>>'.&ZOOVY::resolve_userpath('doba').'/setup.log';
	use Data::Dumper; print F Dumper($rref);
	close F;

	open F, '>>'.&ZOOVY::resolve_userpath('doba').'/authorize.log';
	print F $USERNAME."\t".$DOBAUSERNAME."\n";
	close F;
	
   print STDERR Dumper($rref);
	#$VAR1 = {
   #       'text' => 'No Action Taken',
   #       'version' => '3.0',
   #       'code' => 10
   #     };
	if ($rref->{'code'} == 10) {
		$ACTION = 'ADDCUSTOMER';
		}
	}

if ($ACTION eq 'ADDCUSTOMER') {
	require CUSTOMER;
	require ZTOOLKIT;
	if ($DOBAUSERNAME eq '') {
		($DOBAUSERNAME) = &ZWEBSITE::fetch_website_attrib($USERNAME,'dobauser');
		}

	my ($C) = CUSTOMER->new('doba',EMAIL=>'admin@'.$USERNAME.'.zoovy.com', INIT=>0xFF);
	$C->set_attrib('INFO.SCHEDULE','DOBA');
	$C->set_attrib('WS.ws_company',$USERNAME);
	$C->set_attrib('META.dobauser',$DOBAUSERNAME);
	if ($DOBAUSERID ne '') { $C->set_attrib('META.dobauserid',$DOBAUSERID); }
	$C->set_attrib('INFO.NEWSLETTER',1+2+4+8+16+32);
	$C->set_attrib('INFO.PASSWORD',&ZTOOLKIT::make_password());
	$C->set_jedi($MID);
	$C->save();
	$FLAGS .= ',DOBA,';
	&DOBA::setup_supplier($USERNAME);

	$ACTION = '';
	}


if ($ACTION eq 'DROP') {
 #   $params{'service'} = '"action=drop,code=DS"';

	}


if (index($FLAGS, ',DOBA,') == -1) {
	## hmm.. no doba flag, they may have JUST setup doba, lets check in the CUSTOMER record at doba.zoovy.com
	if (&ZWEBSITE::fetch_website_attrib($USERNAME,'dobauser') ne '') {
		$FLAGS .= ',DOBA,';
		}
	}

if ((index($FLAGS, ',DOBA,') == -1) || ($ACTION eq 'REAUTH')) {
	$template_file = 'signup.shtml';
	
	my $profileref = &ZOOVY::fetchmerchantns_ref($USERNAME,'');
	$profileref = &GTOOLS::Form::serialize(\@REGISTRATION_FIELDS,$ZOOVY::cgiv,$profileref);
	if (not defined $profileref->{'doba:username'}) { $profileref->{'doba:username'} = 'admin@'.$USERNAME.'.zoovy.com'; }
	
   foreach my $fields (@REGISTRATION_FIELDS) {
      print STDERR Dumper($fields);
      my $type = $fields->{'type'};
      my $key = $fields->{'key'};
      next if (($type eq '') || (not defined $GTOOLS::Form::funcs{$type}));
      print STDERR "TYPE: $type\n";

      $fields->{'data'} = $profileref->{$key};
      $GTOOLS::TAG{'<!-- '.$type.'!'.$key.' -->'} =   $GTOOLS::Form::funcs{$type}->(%{$fields});
      }

	}

if ($ACTION eq '') {
	require CUSTOMER;
	my ($C) = CUSTOMER->new('doba',EMAIL=>'admin@'.$USERNAME.'.zoovy.com', INIT=>8);
	$DOBAUSERNAME = $C->get('META.dobauser');
	$DOBAUSERID = $C->get('META.dobauserid');

	$GTOOLS::TAG{'<!-- DOBAUSERNAME -->'} = $DOBAUSERNAME;
	if ($DOBAUSERID eq '') {
		$GTOOLS::TAG{'<!-- DOBAUSERID -->'} = '<i>Not Set</i>';
		$GTOOLS::TAG{'<!-- MISSING_USERID -->'} = qq~<font color="red">Zoovy does not currently have access to your DOBA account, please login to your doba account and authorize Zoovy, or contact DOBA support.</font><br><a href="index.cgi?ACTION=REAUTH">Click here to Retry Authorization</a>~;
		}
	else {
		$GTOOLS::TAG{'<!-- DOBAUSERID -->'} = $DOBAUSERID;
		}
	
	$GTOOLS::TAG{'<!-- USERNAME -->'} = $USERNAME;
	$GTOOLS::TAG{'<!-- PASSWORD -->'} = $C->get('INFO.PASSWORD');
	$C = undef;
	}


&GTOOLS::output(file=>$template_file,header=>1);

