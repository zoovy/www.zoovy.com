#!/usr/bin/perl

use lib "/httpd/modules";
require ZAUTH;
require ZOOVY;
use strict;
require GTOOLS;

&GTOOLS::init();

my $gmt = time();
my $t = 43200; # 12 hour tolerance for timecheck

$GTOOLS::TAG{'<!-- TIMECHECK -->'} = qq~
<script>
<!--
var nowms = (new Date()).getTime();
nowms = nowms / 1000;

// document.write(Date()+".")
if ( (nowms - $gmt > $t) || ($gmt - nowms > $t)) {
	document.write('<br><table bgcolor="yellow"><tr><td><font size="2" color="red">WARNING: SYSTEM CLOCK IS INCORRECT!<br>CANNOT SAVE COOKIES</b></font></td></tr></table><br>');
	}

//-->
</script>
~;


sub resolvehost {
   my ($addr) = @_;

   if ($addr eq '192.168.2.60') { $addr = 'www1'; }
   elsif ($addr eq '192.168.2.65') { $addr = 'www2'; }
   elsif ($addr eq '192.168.2.70') { $addr = 'www3'; }
   elsif ($addr eq '192.168.2.75') { $addr = 'www4'; }
   elsif ($addr eq '192.168.2.80') { $addr = 'www5'; }
   elsif ($addr eq '192.168.2.85') { $addr = 'www6'; }
   elsif ($addr eq '192.168.1.12') { $addr = 'dev'; }

   return($addr);
	}

&ZOOVY::init();

# print STDERR "Running ... login\n";
my $sendto = $ZOOVY::cgiv->{'sendto'};
if ($sendto =~ /^\/login/) { $sendto = '/biz/'; }	## override anything redirecting to /login

$GTOOLS::TAG{'<!-- SENDTO -->'} = $sendto;
$GTOOLS::TAG{'<!-- HOSTNAME -->'} = &resolvehost($ENV{'SERVER_ADDR'});
$GTOOLS::TAG{'<!-- TS -->'} = time();

my ($CODE, $RESULT) = (-1,'');

## DIFF is the number of seconds between now and when the request was made.
my $diff = -1; 
if ($ZOOVY::cgiv->{'ts'}) {
	$diff = time()-$ZOOVY::cgiv->{'ts'};
	if ($diff<0) { $diff = 0-$diff; }
	}

my ($LOGIN,$PASSWORD) = ();

#if ($ENV{'REMOTE_ADDR'} =~ /192\.168/) {
#	$CODE = 12;
#	$RESULT = 'Login not allowed from internal address';
#	}
#elsif ($ENV{'REMOTE_ADDR'} =~ /63\.108\.93/) {
#	$CODE = 13;
#	$RESULT = 'Public Login not allowed from Zoovy internal netblock ['.$diff.']';
#	}

if (not defined $ZOOVY::cgiv->{'authenticate'}) {
	## the user just arrived at the login page - don't show invalid/user password message
	$CODE = 11;
	$RESULT = 'Please provide your username and password.';
	}
elsif (uc($ZOOVY::cgiv->{'authenticate'}) eq 'AUTO') {
	## automatic login, sent once when we first create the account
	}
else {
	##
	## this is where *MOST* users login.
	##
	$LOGIN = lc($ZOOVY::cgiv->{'login'});
	$PASSWORD = $ZOOVY::cgiv->{'password'}; 
	
	# added to fix creme lure space in login problem.
	$LOGIN =~ s/[^\w\*]+//igs;

	## filter out dumb and retarted passwords.
	if (uc($PASSWORD) eq 'PASSWORD') { $ZOOVY::cgiv->{'sendto'} = 'http://www.zoovy.com/biz/changepassword.cgi'; }
	elsif (uc($PASSWORD) eq 'TRIAL') { $ZOOVY::cgiv->{'sendto'} = 'http://www.zoovy.com/biz/changepassword.cgi'; }

	#if (not defined $ZOOVY::cookies->{'checkcookie'}) { 
	#	$CODE = 1; $RESULT = '<b>You must have cookies enabled to use zoovy</b>.  '; 
	#	}

	# they didn't enter a password
	if (($CODE==0) && (!$PASSWORD) || (!$LOGIN)) {
		$CODE = 2; $RESULT = "Login and password must be provided.";
		}

	# the password is incorrect.
	if (not &ZAUTH::get_user_password($LOGIN,$PASSWORD)) {
		$CODE = 3; $RESULT = "Login or password is incorrect.";
		}
	else {
		$CODE = 0; 	# SUCCESS!
		}
	}

if ($CODE>0) {
	if ((defined $ZOOVY::cgiv->{'SAW_COOKIE'}) && ($ZOOVY::cgiv->{'SAW_COOKIE'} == 0)) { 
		$CODE = 5; $RESULT = "Login program did not detect authentication cookie, please allow cookies for *.zoovy.com";
		}
	elsif ((defined $ZOOVY::cgiv->{'JS_TEST'}) && ($ZOOVY::cgiv->{'JS_TEST'}>600)) {
		$CODE = 6; $RESULT = "Your computers clock is more than 10 minutes off, please correct this before logging in.";
		}
	}


##
## At this point $CODE is 0 or the shit hit the fan!
##
##
print STDERR "CODE=$CODE RESULT=$RESULT\n";

my $AUTH_TOKEN = '';
if ($CODE==0) {
	my $dbh = &DBINFO::db_zoovy_connect();


	if (index($LOGIN,'*')>=0) {
		## WOW! so they are logging in user*asdf [don't allow duplicate logins!]
		my ($server,$row_id) = &ZAUTH::get_session_db($LOGIN);
		if ($row_id) {
			my ($u,$lu) = split(/\*/,$LOGIN);
			my $pstmt = "DELETE FROM COOKIE_CACHE WHERE LUSER=".$dbh->quote($u)." and USERNAME=".$dbh->quote($u);
			print STDERR $pstmt."\n";
			$dbh->do($pstmt);
			}
		}

	## regular non
	## okay, so if we made it here. 
	## we're logging them in.
	my ($server,$row_id) = &ZAUTH::get_session_db($LOGIN);
	if (!defined($server) || !defined($row_id)) {
		($server,$row_id) = &ZAUTH::create_session_db($LOGIN);
		}
	else {
		&ZAUTH::refresh_session_db($LOGIN);
		}

	$AUTH_TOKEN = "$LOGIN\@$server\@$row_id\@$ZOOVY::RESELLER\@".$ZOOVY::FLAGS;
	&ZAUTH::set_session_cookie($AUTH_TOKEN);

	&DBINFO::db_zoovy_close();	
	
	if ((not defined $sendto) || (not $sendto)) {
		if ((defined $ZOOVY::cgiv->{'sendto'}) && $ZOOVY::cgiv->{'sendto'}) { $sendto = $ZOOVY::cgiv->{'sendto'}; }
		else { $sendto = '/biz'; }
		}

	if ($sendto =~ /^http[s]?\:\/\//) { $RESULT = $sendto; } else { $RESULT = "http://www.zoovy.com$sendto"; }
	
	$CODE = 0;
	# ($CODE, $RESULT) = &ZAUTH::login("$sendto",0,$ZOOVY::cgiv->{'login'},$ZOOVY::cgiv->{'password'});
	# &ZAUTH::set_checkcookie();
	}


# print "Content-type: text/plain\n\nautstatus: $CODE\n"; exit;
# The first result authenticate gives us is an error code (0 for success)
if ($CODE != 0) {
	# Failed login, give the user the prompt with whatever message was
	# returned from authenticate by shifting the results array again

	my $VAR;
	my $req_uri = $ZOOVY::cgiv->{'req'};
	
	$GTOOLS::TAG{"<!-- MESSAGE -->"} = "[$CODE] $RESULT";
	
	my $LOGIN = $ZOOVY::cgiv->{'login'};
	$GTOOLS::TAG{"<!-- LOGIN -->"} = $LOGIN;
	
	if ($LOGIN eq "") { $VAR = "login"; }
	else { $VAR = "password"; }
	$GTOOLS::TAG{"<!-- VAR -->"} = $VAR;
	
	&ZAUTH::set_session_cookie("");
	&GTOOLS::output(title=>"Please Login",file=>"index.shtml",header=>1,bc=>[ {'name'=>'Login'} ]);
	}
else {
	# Successful login, send the user to the location returned from
	# authenticate by shifting the results array again

	# print STDERR "SUCCESS --> [$sendto]\n";
	$GTOOLS::TAG{'<!-- SENDTO -->'} = $sendto;
	$GTOOLS::TAG{'<!-- AUTH_TOKEN -->'} = $AUTH_TOKEN;
	
	## NOTE: we *must* do a 302 redirect instead of a 301, so that the web browser PASSES the cookie
	##			that we set earlier.. remove the line below at your own peril!
	print "Status: 302 Moved\n";
	print "Location: $sendto\n\n";
	}

